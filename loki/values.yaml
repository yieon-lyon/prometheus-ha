---
loki:
  auth_enabled: false
  limits_config:
    # Solved get rid of the 429 code
    ingestion_burst_size_mb: 1024
    ingestion_rate_mb: 1024
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    max_cache_freshness_per_query: 10m
    split_queries_by_interval: 15m
    query_timeout: 300s
    volume_enabled: true
  schemaConfig:
    configs:
      - from: 2024-04-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4
  storage:
    bucketNames:
      chunks: loki-logs
      ruler: loki-logs
      admin: loki-logs
    type: s3
    s3:
      endpoint: s3.ap-northeast-2.amazonaws.com
      region: ap-northeast-2
      accessKeyId: {YOUR_ACCESS_KEY}
      secretAccessKey: {YOUR_SECRET_KEY}
  nodeSelector:
    eks.amazonaws.com/nodegroup: monitoring
    kubernetes.io/arch: arm64
  tolerations:
    - key: system-type
      operator: Equal
      value: monitoring
      effect: NoSchedule
    - key: arch-type
      operator: Equal
      value: arm
      effect: NoSchedule

lokiCanary:
  priorityClassName: system-cluster-critical
  nodeSelector:
    eks.amazonaws.com/nodegroup: monitoring
    kubernetes.io/arch: arm64
  tolerations:
    - key: system-type
      operator: Equal
      value: monitoring
      effect: NoSchedule
    - key: arch-type
      operator: Equal
      value: arm
      effect: NoSchedule

gateway:
  enabled: true
  basicAuth:
    enabled: false
  replicas: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 60
    targetMemoryUtilizationPercentage: 80
  deploymentStrategy:
    type: RollingUpdate
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector:
    eks.amazonaws.com/nodegroup: monitoring
    kubernetes.io/arch: arm64
  tolerations:
    - key: system-type
      operator: Equal
      value: monitoring
      effect: NoSchedule
    - key: arch-type
      operator: Equal
      value: arm
      effect: NoSchedule
#  ingress:
#    enabled: true
#    hosts:
#      - host: FIXME
#        paths:
#          - path: /
#            pathType: Prefix

deploymentMode: SimpleScalable

backend:
  replicas: 3
  nodeSelector:
    eks.amazonaws.com/nodegroup: monitoring
    kubernetes.io/arch: arm64
  tolerations:
    - key: system-type
      operator: Equal
      value: monitoring
      effect: NoSchedule
    - key: arch-type
      operator: Equal
      value: arm
      effect: NoSchedule
read:
  replicas: 3
  nodeSelector:
    eks.amazonaws.com/nodegroup: monitoring
    kubernetes.io/arch: arm64
  tolerations:
    - key: system-type
      operator: Equal
      value: monitoring
      effect: NoSchedule
    - key: arch-type
      operator: Equal
      value: arm
      effect: NoSchedule
write:
  replicas: 3
  nodeSelector:
    eks.amazonaws.com/nodegroup: monitoring
    kubernetes.io/arch: arm64
  tolerations:
    - key: system-type
      operator: Equal
      value: monitoring
      effect: NoSchedule
    - key: arch-type
      operator: Equal
      value: arm
      effect: NoSchedule

minio:
  enabled: false

# Zero out replica counts of other deployment modes
singleBinary:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0

resultsCache:
  enabled: true
  nodeSelector:
    eks.amazonaws.com/nodegroup: monitoring
    kubernetes.io/arch: arm64
  tolerations:
    - key: system-type
      operator: Equal
      value: monitoring
      effect: NoSchedule
    - key: arch-type
      operator: Equal
      value: arm
      effect: NoSchedule
chunksCache:
  enabled: true
  allocatedMemory: 1024
  nodeSelector:
    eks.amazonaws.com/nodegroup: monitoring
    kubernetes.io/arch: arm64
  tolerations:
    - key: system-type
      operator: Equal
      value: monitoring
      effect: NoSchedule
    - key: arch-type
      operator: Equal
      value: arm
      effect: NoSchedule
monitoring:
  # Dashboards for monitoring Loki
  dashboards:
    # -- If enabled, create configmap with dashboards for monitoring Loki
    enabled: true